リファクタリング、名詞と動詞
============================================================

* 個々のテクニックは **名詞のリファクタリング**
* ※これをエディタと結び付けようと共有していきます

リファクタリング（名詞）
--------------------------------------------------

    外部から見たときの振る舞いを保ちつつ、理解や修正が簡単になるように、ソフトウェアの内部構造を変化させること

📘『`リファクタリング`_』第2章の中の「リファクタリングの定義」

リファクタリング（名詞） 🏃‍♂️
--------------------------------------------------

- **変えるのは構造だけ**
- 振る舞いは変えない
- 開発者がコードを理解しやすく・変更しやすくするために構造を変える

動詞のリファクタリング
--------------------------------------------------

* 名詞のリファクタリング **複数を適用** して構造を変えること
* 1つ1つのテクニックは小さい。組合せて適用する

動詞のリファクタリング 🏃‍♂️
--------------------------------------------------

* 名詞のリファクタリングの手順は、📘『`リファクタリング`_』6章以降で解説される
* 6章が基本のリファクタリングテクニック。基本を **組合せ** たテクニックも存在する

一発で正解することが難しいからこそ
--------------------------------------------------

* *俺は弱い！* だから **正解に近づけていく** （リファクタリングもその一環）
* 参考： `Make It Work Make It Right Make It Fast <https://wiki.c2.com/?MakeItWorkMakeItRightMakeItFast>`__

  * まず動かしてから正しくする順 （その後に速くするが来る）

主張：リファクタリングテクニックをエディタと結び付けよう
============================================================

* リファクタリングを「知っている」の先「**使える**」状態になるには、
* **エディタの操作** として身体で覚えよう

テクニックのいくつかはエディタの機能になっている
--------------------------------------------------

* **VS Codeを操作** してリファクタリングテクニックを適用できる
* サポートしているテクニックの範囲はエディタによって異なる

  * IntelliJ IDEAはもっと広くサポート

IMO：リファクタリングを使えるようになるために知ること
------------------------------------------------------------

* 「どんなときに使うのか」
* 「エディタではどんな操作になるのか」

使える＝体で覚える＝"**常中**"
--------------------------------------------------

:「どんなときに使うのか」: 📘『`リファクタリング`_』からあるべきを知る
:「VS Codeではどんな操作になるのか」: 本トークで結び付けます
