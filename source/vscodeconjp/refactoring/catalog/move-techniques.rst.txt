Part 3. カタログ：VS Codeでリファクタリング
============================================================

* 変数名の変更
* 関数名の変更
* 変数の抽出
* 関数の抽出
* **特性の移動** に関する数テクニック

特性の移動
--------------------------------------------------

* 📘『`リファクタリング`_』第8章
* 文・フィールド・関数を **移動** するリファクタリングテクニックを紹介

特性の移動のテクニック（一部） 🏃‍♂️
--------------------------------------------------

* `関数の移動 <https://refactoring.com/catalog/moveFunction.html>`_
* `フィールドの移動 <https://refactoring.com/catalog/moveField.html>`_
* *ステートメント* （文）も移動

なぜ移動する？
--------------------------------------------------

* 関連する要素をまとめる
* 一発で正解の関連を見つけることもまた難しい🥺
* 関連についての理解が深まったら、**移動してまとめ方を更新** する

VS Codeで移動といったら :kbd:`⌥↑` や :kbd:`⌥↓`
============================================================

* `Move line up and down <https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_move-line-up-and-down>`_
* 行をまとめて移動もできて便利

Move line up and downのデモ
--------------------------------------------------

Move line up and down
--------------------------------------------------

* 行を動かしただけで「特性の移動」が完了することは少ない

  * 移動先の文脈に位置づける（引数の追加・編集が必要）

* IMO：リファクタリングの **端緒** として、簡単にできる操作という点がオススメ

特性の移動（文・フィールド・関数の移動テクニック）
============================================================

:どんなときに使うのか: 深まった理解に基づき、関連する要素の **まとめ方を変える** とき
:VS Codeではどんな操作になるのか: :kbd:`⌥↑` や :kbd:`⌥↓` が最初の操作
