============================================================
Djangoアプリに作り込んで学ぶ脆弱性
============================================================

SQLインジェクションとXSS篇

:Event: DjangoCongress JP 2023
:Presented: 2023/10/07 nikkie

⏰一緒に **悪いこと** をする時間です！⏰
============================================================

* 脆弱性を学ぶために、Djangoでやられサイトを実装してきました
* 脆弱性とはバグ🐛で、 **突いて攻撃できてしまうバグ** です
* やられサイトへの攻撃を通して、脆弱性の **原因** は何で、どう **対策** するかを学びましょう

Djangoで実装したやられサイト
--------------------------------------------------

https://github.com/ftnext/django-bad-apps

* よければ手元で動かしてみてください
* GitとDocker（とネットワーク）を前提にしています

過去の自分に贈る発表です
--------------------------------------------------

* Djangoのチュートリアルを終えた（+小さいアプリ作ってみた）
* 脆弱性の対策は重要らしいけど、しっかり理解できてないな...（難しそう...）
* 👉やられサイトを攻撃してみたら、脆弱性学ぶの面白い！！

お約束：ルールを守って楽しく学ぼう！
--------------------------------------------------

* **攻撃は** 手元で動かす **やられサイトだけ** でお願いします
* 世のWebアプリに対して試してはいけません🙅‍♂️（攻撃になっちゃうぞ❤️）
* 本トークの目的は **脆弱性を学ぶ** ことであり、攻撃を勧める内容では決してありません

お前、誰よ（今はやられサイト環境構築の時間）
============================================================

* nikkie（にっきー） ／ :fab:`twitter` `@ftnext <https://twitter.com/ftnext>`__
* 株式会社ユーザベースのデータサイエンティスト（`We're hiring! <https://hrmos.co/pages/uzabase/jobs/1829077236709650481>`__）

.. image:: https://drive.google.com/uc?id=19PMMnkqDiFMCJBPwoA1B51ltQBG0y4kL

Djangoとnikkie
--------------------------------------------------

* Djangoの実務経験はなし
* `Django Girls Tutorial <https://tutorial.djangogirls.org/ja/>`__ の翻訳（2018-2019）
* PyCon JP スタッフ向けにDjangoでアプリ自作 https://github.com/pyconjp/pycon.jp.2021.review

Djangoアプリに作り込んで学ぶ脆弱性
============================================================

1. SQLインジェクション💉
2. XSS篇🙅

.. include:: sql-injection.rst.txt

.. include:: xss.rst.txt

まとめ：Djangoアプリに作り込んで学ぶ脆弱性
============================================================

SQLインジェクションとXSS篇

SQLインジェクション💉
--------------------------------------------------

* 文字列をフォーマットしてSQL文を組み立てる実装は、脆弱性
* 任意のSQLを実行できてしまう
* 対策： **ORM** を使いましょう

XSS🙅
--------------------------------------------------

* HTMLやJavaScriptをエスケープしない実装は、脆弱性
* 任意のJavaScriptを実装できてしまう
* 対策： **テンプレート** を使いましょう（+属性値はクォートで囲む）

ユーザ入力を信用してはならぬ
--------------------------------------------------

* SQLインジェクションの例では、ユーザが任意のSQLを実行しようとした

  * ユーザ入力からSQLを作るのではなく、 **ORM** に渡す（プレースホルダ）

* XSSの例では、ユーザが任意のJavaScriptを保存して、表示時に実行しようとした

  * ユーザ入力は（テンプレートを通して） **エスケープ** して画面に表示

Djangoの脆弱性対策がすごい👏
--------------------------------------------------

* ORMやテンプレートなど、Djangoが提供する方法では脆弱性が対策されている
* 過去の私はSQLインジェクションやXSSの **知識が全然なかった** が、Djangoのおかげで **セキュリティ対策** したアプリが作れていた（フールプルーフ）

ご清聴ありがとうございました
--------------------------------------------------

Enjoy coding with Django!

Appendix
============================================================

参考文献
============================================================

* `体系的に学ぶ 安全なWebアプリケーションの作り方 第2版 <https://www.sbcr.jp/product/4797393163/>`__ （徳丸本）

  * https://wasbook.org/

* `実践Django`_

ありがとう、徳丸さん
--------------------------------------------------

* 徳丸さん作のやられサイト badtodo https://github.com/ockeghem/badtodo
* 解説動画シリーズ `Bad Todoで脆弱性診断実習 <https://youtube.com/playlist?list=PLWiFLcGkQgLzxPw23mQniahM_kPH_EsVH&si=rIfuJtNk_D6QFPaf>`__

ありがとう、チームメイト諸氏
--------------------------------------------------

* `徳丸さん作 Bad Todo List を使ったハンズオンを開催したよ（ご本人登場） <https://tech.uzabase.com/entry/2023/08/04/151018>`__
* 徳丸さんのbadtodoにSQLインジェクションを試す機会がなかったら、この発表はきっとなかったでしょう

EOF
============================================================
